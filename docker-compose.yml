version: "3.9"
services:
  redis-cache:
    image: redis:7.0.4-alpine
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - cache:/data
    networks:
      - crypto-mailer

  rabbit-mq:
    image: "rabbitmq:3.11.0-management"
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 2s
    volumes:
      - rabbit_mq:/var/lib/rabbitmq/mnesia/
    networks:
      - crypto-mailer

  dtm:
    image: yedf/dtm
    container_name: dtm
    restart: always
    ports:
      - "36790:36790"
      - "36789:36789"
    networks:
      - crypto-mailer

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    ports:
      - "8004:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=saga
      - MYSQL_USER=saga
      - MYSQL_PASSWORD=saga
    networks:
      - crypto-mailer

  orders:
     container_name: orders-service
     build: ./orders-service
     restart: always
     environment:
       - DTM_COORDINATOR=http://dtm:36789/api/dtmsvr
       - CUSTOMERS_SERVICE_URL=http://customers:8080
     ports:
       - "8003:8000"
     depends_on:
       - dtm
       - customers
     networks:
       - crypto-mailer

  customers:
    container_name: customers-service
    build: ./customers-service
    restart: always
    environment:
      - MYSQL_URL=saga:saga@tcp(mysql:3306)/saga?charset=utf8mb4&parseTime=True&loc=Local
    ports:
      - "8002:8000"
    depends_on:
      - mysql
    networks:
      - crypto-mailer

  mailer:
    build: ./crypto-service
    ports:
      - "8000:8000"
    restart: on-failure
    depends_on:
      rabbit-mq:
        condition: service_healthy
      redis-cache:
        condition: service_started
      orders:
        condition: service_started
    networks:
      - crypto-mailer

  logs-consumer:
    build: ./logs-consumer
    ports:
      - "8001:8000"
    restart: on-failure
    depends_on:
      - mailer
    networks:
      - crypto-mailer

volumes:
  rabbit_mq:
    driver: local
  cache:
    driver: local

networks:
  crypto-mailer:
    driver: bridge
    external: false